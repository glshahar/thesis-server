{
  "_args": [
    [
      {
        "raw": "buffered-sink@git://github.com/harish2704/node-buffered-sink.git",
        "scope": null,
        "escapedName": "buffered-sink",
        "name": "buffered-sink",
        "rawSpec": "git://github.com/harish2704/node-buffered-sink.git",
        "spec": "git://github.com/harish2704/node-buffered-sink.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:harish2704/node-buffered-sink.git",
          "sshUrl": "git+ssh://git@github.com/harish2704/node-buffered-sink.git",
          "httpsUrl": "git+https://github.com/harish2704/node-buffered-sink.git",
          "gitUrl": "git://github.com/harish2704/node-buffered-sink.git",
          "shortcut": "github:harish2704/node-buffered-sink",
          "directUrl": "https://raw.githubusercontent.com/harish2704/node-buffered-sink/master/package.json"
        }
      },
      "C:\\xampp\\htdocs\\cricket\\webservice\\node_modules\\html-scrapper"
    ]
  ],
  "_from": "git://github.com/harish2704/node-buffered-sink.git",
  "_id": "buffered-sink@0.0.1",
  "_inCache": true,
  "_location": "/buffered-sink",
  "_phantomChildren": {},
  "_requested": {
    "raw": "buffered-sink@git://github.com/harish2704/node-buffered-sink.git",
    "scope": null,
    "escapedName": "buffered-sink",
    "name": "buffered-sink",
    "rawSpec": "git://github.com/harish2704/node-buffered-sink.git",
    "spec": "git://github.com/harish2704/node-buffered-sink.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:harish2704/node-buffered-sink.git",
      "sshUrl": "git+ssh://git@github.com/harish2704/node-buffered-sink.git",
      "httpsUrl": "git+https://github.com/harish2704/node-buffered-sink.git",
      "gitUrl": "git://github.com/harish2704/node-buffered-sink.git",
      "shortcut": "github:harish2704/node-buffered-sink",
      "directUrl": "https://raw.githubusercontent.com/harish2704/node-buffered-sink/master/package.json"
    }
  },
  "_requiredBy": [
    "/html-scrapper"
  ],
  "_resolved": "git://github.com/harish2704/node-buffered-sink.git#5f8425239d24838aa0fe5f9583a40135165649cb",
  "_shasum": "a8a0666b9a27ba797c5910a233ce3ae0c76421c5",
  "_shrinkwrap": null,
  "_spec": "buffered-sink@git://github.com/harish2704/node-buffered-sink.git",
  "_where": "C:\\xampp\\htdocs\\cricket\\webservice\\node_modules\\html-scrapper",
  "author": {
    "name": "Harish.K",
    "email": "harish2704@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/harish2704/node-buffered-sink"
  },
  "dependencies": {},
  "description": "A general purpose buffer class that can buffer custom objects need to be sent to a sink.",
  "devDependencies": {},
  "gitHead": "5f8425239d24838aa0fe5f9583a40135165649cb",
  "homepage": "https://github.com/harish2704/node-buffered-sink#readme",
  "keywords": [],
  "license": "BSD-2-Clause",
  "main": "src/index.js",
  "name": "buffered-sink",
  "optionalDependencies": {},
  "readme": "Buffered-Sink\r\n=============\r\n\r\nA general purpose Nodejs class that can be used to write data to any data sinks, with buffering.\r\nIt's working is similar to underscore.js 's after() funnction. But it take care of some other situations too.\r\n\r\n# Usage\r\n\r\n```javascript\r\nvar BufferedSink = require('buffered-sink');\r\n\r\nvar jsonFileSink = new BufferedSink( {\r\n    maxSize: 5,\r\n    writeItems: function(items, cb){\r\n        var existing;\r\n        try {\r\n            existing = JSON.parse( fs.readFileSync( outFile, 'utf-8' ) );\r\n        } catch(e){\r\n            existing = [];\r\n        }\r\n        var total = existing.concat( items );\r\n        fs.writeFile( outFile, JSON.stringify(total, null, ' '), 'utf-8', cb );\r\n    }\r\n});\r\n\r\njsonFileSink.$write({ title: 'first'}, cb ); // No real write. data is stored in memmoy\r\njsonFileSink.$write({ title: 'second'}, cb ); // No real write. data is stored in memmoy\r\njsonFileSink.$write({ title: 'third'}, cb ); // No real write. data is stored in memmoy\r\njsonFileSink.$write({ title: 'fourth'}, cb ); // No real write. data is stored in memmoy\r\njsonFileSink.$write({ title: 'fifth'}, cb ); // real write occurs. calls writeItems funnction provided in constructor internally.\r\n```\r\n\r\n# Documentation\r\n## Class BufferedSink\r\n\r\n### Constructor : new BufferedSink( opts );\r\n* `opts.maxSize`: {Integer} maximum size of internal buffer.\r\n* `opts.writeItems`: {funnction( items, callback )} A function that does real writing.\r\n\r\n### Methods\r\n\r\n#### `$writeItems( items, cb )`\r\nWrites an array of items.\r\n\r\n#### `$write( items, cb )`\r\nWrites a single item.\r\n\r\n#### `flush( cb )`\r\nDo real writing and empty the buffer.\r\n\r\n### Internal variable that holds state\r\n\r\n#### cache: Array\r\nUsed to store items. Used as a buffer store.\r\n\r\n#### tempCache: Array\r\nUsed to store items at the moment when real writing is taking place. To be precise, if this.isWriting == true.\r\n\r\n#### isWriting: Boolean\r\nA flag that used to indicate whether real writing is taking place or not.\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/harish2704/node-buffered-sink.git"
  },
  "scripts": {
    "test": "mocha -R spec test/*.spec.js"
  },
  "version": "0.0.1"
}
